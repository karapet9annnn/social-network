{"version":3,"file":"static/js/764.41c9e810.chunk.js","mappings":"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","sources":["webpack://it-kama/./src/Components/UsersPage/UsersPage.module.css?37ee","Components/UsersPage/Users.jsx","Components/UsersPage/UsersPageÐ¡.jsx","redux/users-selectors.js","Components/UsersPage/UsersPageContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users__container\":\"UsersPage_users__container__1eeKo\",\"users__content\":\"UsersPage_users__content__ezwj1\",\"user__container\":\"UsersPage_user__container__bnN46\",\"user__follow-btn\":\"UsersPage_user__follow-btn__8BWWG\",\"right-block\":\"UsersPage_right-block__BWGMK\",\"info__left__block\":\"UsersPage_info__left__block__ESEHK\",\"user__info\":\"UsersPage_user__info__JewhQ\",\"user__status\":\"UsersPage_user__status__Io0u5\",\"user__location\":\"UsersPage_user__location__MA-Yf\",\"user__ava\":\"UsersPage_user__ava__CM7Z0\",\"followed__button\":\"UsersPage_followed__button__qZgFp\",\"pages__container\":\"UsersPage_pages__container__Bsw-A\",\"pagination__container\":\"UsersPage_pagination__container__BsCUi\",\"active\":\"UsersPage_active__DMZpq\",\"navigation\":\"UsersPage_navigation__cIfXM\"};","import { NavLink } from 'react-router-dom'\nimport css from './UsersPage.module.css'\nimport Pagination from '@mui/material/Pagination';\nimport { useEffect, useState } from 'react';\n\nlet User = ({ ava, name, location, status = 'No status', followed, follow, unFollow, id, ...props }) => {\n    let followUser = (userID) => {\n        follow(userID)\n    }\n\n    let unFollowUser = userID => {\n        unFollow(userID)\n    }\n\n\n\n    return (\n        <div className={css.user__container}>\n            <div className={css.left__block}>\n                <div className={css.user__ava}>\n                    <NavLink to={`profile/${id}`}>\n                        <img src={ava ? ava : 'https://marketplace.canva.com/EAFEits4-uw/1/0/800w/canva-boy-cartoon-gamer-animated-twitch-profile-photo-r0bPCSjUqg0.jpg'} alt=\"\" />\n                    </NavLink>\n                </div>\n                <div className={css['user__follow-btn']}>\n                    {\n                        followed ?\n                            <button className={css.followed__button} disabled={props.followingInProcessUsers.some(userID => userID == id)} onClick={() => unFollowUser(id)}>Unfollow</button>\n                            :\n                            <button className={css.unfollowed__button} disabled={props.followingInProcessUsers.some(userID => userID == id)} onClick={() => followUser(id)}>Follow</button>\n                    }\n                </div>\n            </div>\n            <div className={css['right-block']}>\n                <div className={css.user__info}>\n                    <div className={css.info__left__block}>\n                        <div className={css.user__name}>\n                            {name}\n                        </div>\n                        <div className={css.user__status}>\n                            {status ? status : 'No status'}\n                        </div>\n                    </div>\n                    <div className={css.info__right__block}>\n                        <div className={css.user__location}>\n                            <div className={css.location__city}>Erevan</div>\n                            <div className={css.location__country}>Armenia</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\nfunction Users({ totalUsersCount, usersToShow, currentPage, pageChange, users, follow, unFollow, ...props }) {\n    let pagesCount = Math.ceil(totalUsersCount / usersToShow)\n    // let [currentPage, setCurrentPage] = useState(page)\n    // useEffect(() => {\n    //     pageChange(currentPage)\n    // },[currentPage])\n    // let pages = []\n\n    // for (let i = 1; i <= pagesCount; i++) {\n    //     pages.push(i)\n    // }\n\n    let handler = (e, value) => {\n        // setCurrentPage(value)\n        pageChange(value)\n    }\n\n    return (\n        <div className={css.users__container}>\n            <div className={css.users__content}>\n                <h1>Users</h1>\n                <div className={css.pagination__container}>\n                    {/* <div className={css.pages__container}>\n                        {\n                            pages.map((elem, index) => {\n                                return <div key={elem} className={currentPage === elem ? css.active : undefined} onClick={() => pageChange(elem)}>{elem}</div>\n                            })\n                        }\n                    </div> */}\n                    <Pagination count={pagesCount} defaultPage={currentPage} boundaryCount={10} onChange={handler}/>\n\n                </div>\n                {users.map((elem, index) => {\n                    return <User\n                        {...props}\n                        id={elem.id}\n                        follow={follow}\n                        unFollow={unFollow}\n                        key={elem.id}\n                        followed={elem.followed}\n                        ava={elem.photos.small}\n                        status={elem.status}\n                        name={elem.name} />\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Users;","import css from './UsersPage.module.css'\nimport React, { useEffect } from 'react'\nimport Users from './Users'\nimport Preloader from '../../plugins/Preloader/Preloader'\n\n\nfunction UsersPageC(props) {\n    useEffect(() => {\n        props.getUsers(props.usersToShow, props.currentPage)\n    },[])\n\n    let pageChange = (currentPage) => {\n        props.getUsers(props.usersToShow, currentPage)\n    }\n\n    return <div className={css.users__container}>\n        {\n            props.isLoading ? <Preloader /> : <Users\n            totalUsersCount={props.totalUsersCount}\n            users={props.users}\n            usersToShow={props.usersToShow}\n            currentPage={props.currentPage}\n            pageChange={pageChange}\n            follow={props.follow}\n            unFollow={props.unFollow}\n            {...props}\n        />}\n    </div>\n}\n\n\n\nexport default UsersPageC\n\n\n","import { createSelector } from '@reduxjs/toolkit'\n\nlet getUsers = (state) => {\n    return state.usersPage.users\n}\nexport let getUsersSelector = createSelector(getUsers, users => users)\n\nexport let getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport let getUsersToShow = state => {\n    return state.usersPage.usersToShow\n}\n\nexport let getCurrentPage = state => {\n    return state.usersPage.currentPage\n}\n\nexport let getIsLoading = state => {\n    return state.usersPage.isLoading\n}\n\nexport let getFollowingInProcessUsers = state => {\n    return state.usersPage.followingInProcessUsers\n}","import { connect } from \"react-redux\";\nimport { follow, getUsers, setCurrentPage, setFollowingProcess, setIsLoading, setTotalUsersCount, setUsersAC, unFollow, unFollowAC } from \"../../redux/usersPageReducer\";\nimport UsersPageC from \"./UsersPageÐ¡\";\nimport { withAuthRedirect } from \"../../hoc/Redirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProcessUsers, getIsLoading, getTotalUsersCount, getUsersSelector, getUsersToShow } from \"../../redux/users-selectors\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersSelector(state),\n        totalUsersCount: getTotalUsersCount(state),\n        usersToShow: getUsersToShow(state),\n        currentPage: getCurrentPage(state),\n        isLoading: getIsLoading(state),\n        followingInProcessUsers: getFollowingInProcessUsers(state),\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setTotalUsersCount: (usersCount) => {\n            dispatch(setTotalUsersCount(usersCount))\n        },\n        setCurrentPage: (currentPage) => {\n            dispatch(setCurrentPage(currentPage))\n        },\n        follow: (userID) => {\n            dispatch(follow(userID))\n        },\n        unFollow: (userID) => {\n            dispatch(unFollow(userID))\n        },\n        setIsLoading: (bool) => {\n            dispatch(setIsLoading(bool))\n        },\n        setFollowingProcess: (isFetching, userID) => {\n            dispatch(setFollowingProcess(isFetching, userID))\n        },\n        getUsers: (usersToShow, currentPage) => {\n            dispatch(getUsers(usersToShow, currentPage))\n        }\n     }\n}\n\nlet UsersPageContainer = compose(\n    withAuthRedirect,\n    connect(mapStateToProps,mapDispatchToProps)\n    )(UsersPageC)\n\nexport default UsersPageContainer"],"names":["User","_ref","ava","name","_ref$status","location","status","followed","follow","unFollow","id","props","_objectWithoutProperties","_excluded","_jsxs","className","css","children","_jsx","NavLink","to","concat","src","alt","disabled","followingInProcessUsers","some","userID","onClick","_ref2","totalUsersCount","usersToShow","currentPage","pageChange","users","_excluded2","pagesCount","Math","ceil","Pagination","count","defaultPage","boundaryCount","onChange","e","value","map","elem","index","_createElement","_objectSpread","key","photos","small","useEffect","getUsers","isLoading","Preloader","Users","getUsersSelector","createSelector","state","usersPage","getTotalUsersCount","getUsersToShow","getCurrentPage","getIsLoading","getFollowingInProcessUsers","compose","withAuthRedirect","connect","dispatch","setUsers","setUsersAC","setTotalUsersCount","usersCount","setCurrentPage","setIsLoading","bool","setFollowingProcess","isFetching","UsersPageC"],"sourceRoot":""}