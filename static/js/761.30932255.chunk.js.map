{"version":3,"file":"static/js/761.30932255.chunk.js","mappings":"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","sources":["redux/users-selectors.ts","webpack://it-kama/./src/Components/UsersPage/UsersPage.module.css?37ee","Components/UsersPage/Users.tsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\nimport { RootState } from './state'\n\nlet getUsers = (state: RootState) => {\n    return state.usersPage.users\n}\nexport let getUsersSelector = createSelector(getUsers, users => users)\n\nexport let getTotalUsersCount = (state: RootState) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport let getUsersToShow = (state: RootState) => {\n    return state.usersPage.usersToShow\n}\n\nexport let getCurrentPage = (state: RootState) => {\n    return state.usersPage.currentPage\n}\n\nexport let getIsLoading = (state: RootState) => {\n    return state.usersPage.isLoading\n}\n\nexport let getFollowingInProcessUsers = (state: RootState) => {\n    return state.usersPage.followingInProcessUsers\n}\nexport let getFilter = (state: RootState) => {\n    return state.usersPage.filter\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"users__container\":\"UsersPage_users__container__1eeKo\",\"users__content\":\"UsersPage_users__content__ezwj1\",\"user__container\":\"UsersPage_user__container__bnN46\",\"user__follow-btn\":\"UsersPage_user__follow-btn__8BWWG\",\"right-block\":\"UsersPage_right-block__BWGMK\",\"info__left__block\":\"UsersPage_info__left__block__ESEHK\",\"user__info\":\"UsersPage_user__info__JewhQ\",\"user__status\":\"UsersPage_user__status__Io0u5\",\"user__location\":\"UsersPage_user__location__MA-Yf\",\"user__ava\":\"UsersPage_user__ava__CM7Z0\",\"followed__button\":\"UsersPage_followed__button__qZgFp\",\"pagination__container\":\"UsersPage_pagination__container__BsCUi\",\"pages__container\":\"UsersPage_pages__container__Bsw-A\",\"active\":\"UsersPage_active__DMZpq\",\"navigation\":\"UsersPage_navigation__cIfXM\"};","import Pagination from \"@mui/material/Pagination\";\nimport { FC, memo, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { WithAuthRedirect } from \"../../hoc/Redirect\";\nimport Preloader from \"../../plugins/Preloader/Preloader\";\nimport { AppDispatch, useAppSelector } from \"../../redux/state\";\nimport { getCurrentPage, getFilter, getFollowingInProcessUsers, getIsLoading, getTotalUsersCount, getUsersSelector, getUsersToShow } from \"../../redux/users-selectors\";\nimport { follow, getUsers, unFollow } from \"../../redux/usersPageReducer\";\nimport css from \"./UsersPage.module.css\";\n\ntype UserType = {\n  ava: string;\n  name: string;\n  status?: string;\n  followed: boolean;\n  id: number;\n  followingInProcessUsers: Array<number>;\n  unFollow: (userID: number) => void,\n  follow: (userID: number) => void\n};\n\nlet User: FC<UserType> = ({\n  unFollow,\n  follow,\n  ava,\n  name,\n  status = \"No status\",\n  followed,\n  id,\n  followingInProcessUsers,\n}) => {\n\n\n\n  return (\n    <div className={css.user__container}>\n      <div className={css.left__block}>\n        <div className={css.user__ava}>\n          <NavLink to={`profile/${id}`}>\n            <img\n              src={\n                ava\n                  ? ava\n                  : \"https://marketplace.canva.com/EAFEits4-uw/1/0/800w/canva-boy-cartoon-gamer-animated-twitch-profile-photo-r0bPCSjUqg0.jpg\"\n              }\n              alt=\"\"\n            />\n          </NavLink>\n        </div>\n        <div className={css[\"user__follow-btn\"]}>\n          {followed ? (\n            <button\n              className={css.followed__button}\n              disabled={followingInProcessUsers.some((userID) => userID == id)}\n              onClick={() => unFollow(id)}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              className={css.unfollowed__button}\n              disabled={followingInProcessUsers.some((userID) => userID == id)}\n              onClick={() => follow(id)}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </div>\n      <div className={css[\"right-block\"]}>\n        <div className={css.user__info}>\n          <div className={css.info__left__block}>\n            <div className={css.user__name}>{name}</div>\n            <div className={css.user__status}>\n              {status ? status : \"No status\"}\n            </div>\n          </div>\n          <div className={css.info__right__block}>\n            <div className={css.user__location}>\n              <div className={css.location__city}>Erevan</div>\n              <div className={css.location__country}>Armenia</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nlet Users: FC = memo(() => {\n  let totalUsersCount = useAppSelector(getTotalUsersCount)\n  let usersToShow = useAppSelector(getUsersToShow)\n  let filter = useAppSelector(getFilter)\n  let currentPage = useAppSelector(getCurrentPage)\n  let followingInProcessUsers = useAppSelector(getFollowingInProcessUsers)\n  let users = useAppSelector(getUsersSelector)\n  let IsLoading = useAppSelector(getIsLoading)\n  let dispatch: AppDispatch = useDispatch()\n\n  let navigate = useNavigate()\n  let url = useLocation()\n  const searchParams = new URLSearchParams(url.search);\n\n  const actualQueryPage = +(searchParams.get('page') || currentPage);\n  const actualQueryTerm = searchParams.get('term') || filter.term;\n  const actualQueryFollowed = searchParams.get('followed') || filter.friend;\n\n  useEffect(() => {\n    dispatch(getUsers(usersToShow, actualQueryPage, { friend: actualQueryFollowed, term: actualQueryTerm }))\n  }, [])\n\n  useEffect(() => {\n    const query: any = {}\n    if (!!filter.term) query.term = filter.term\n    if (filter.friend !== 'null') query.friend = filter.friend\n    if (currentPage !== 1) query.page = currentPage\n\n    const filteredQuery: any = Object.fromEntries(Object.entries(query).filter(([_, value]) => value !== undefined))\n    let queryString = new URLSearchParams(filteredQuery).toString()\n    navigate(`?${queryString}`)\n\n  }, [filter, currentPage])\n\n  let pageChange = (e: unknown, value: number) => {\n    dispatch(getUsers(usersToShow, value, { friend: filter.friend, term: filter.term }))\n  }\n\n  let onFilterChanged = (filter: { term: string, friend: string }) => {\n    dispatch(getUsers(usersToShow, 1, filter))\n  }\n\n\n  let pagesCount = Math.ceil(totalUsersCount / usersToShow);\n\n  let { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      term: filter.term,\n      friend: filter.friend\n    },\n  });\n\n  let followUser = (userID: number) => {\n    dispatch(follow(userID));\n  };\n\n  let unFollowUser = (userID: number) => {\n    dispatch(unFollow(userID));\n  };\n  return (\n    <div className={css.users__container}>\n      {IsLoading ? <Preloader /> : <div className={css.users__container}>\n        <div className={css.users__content}>\n          <h1>Users</h1>\n          <div className={css.filter__container}>\n            <form onSubmit={handleSubmit(onFilterChanged)}>\n              <input\n                type=\"text\"\n                {...register(\"term\")}\n                placeholder=\"Find Users...\"\n              />\n\n              <select {...register(\"friend\")}>\n                <option value='null'>All</option>\n                <option value='true'>Followed</option>\n                <option value='false'>Unfollowed</option>\n              </select>\n              <input type=\"submit\" />\n              <button type=\"button\" title='Reset' onClick={() => {\n                reset({\n                  friend: 'null'\n                })\n                onFilterChanged({ term: '', friend: 'null' })\n\n              }}>Reset</button>\n            </form>\n          </div>\n          <div className={css.pagination__container}>\n            <Pagination\n              count={pagesCount}\n              defaultPage={currentPage}\n              boundaryCount={10}\n              onChange={pageChange}\n            />\n          </div>\n          {users.length ? users.map((elem) => {\n            return <User\n              follow={followUser}\n              unFollow={unFollowUser}\n              followingInProcessUsers={followingInProcessUsers}\n              id={elem.id}\n              key={elem.id}\n              followed={elem.followed}\n              ava={elem.photos.small}\n              status={elem.status}\n              name={elem.name}\n            />\n          }) : <div>No Users With Selected Filters</div>}\n        </div>\n      </div>}\n    </div>\n  )\n});\n\n\nexport default WithAuthRedirect(Users);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//My Own paginator\n// let [currentPage, setCurrentPage] = useState(page)\n// useEffect(() => {\n//     pageChange(currentPage)\n// },[currentPage])\n// let pages = []\n\n// for (let i = 1; i <= pagesCount; i++) {\n//     pages.push(i)\n// }\n// const url = new URL('https://example.com/search?location=New+York');\n\n{/* <div className={css.pages__container}>\n                        {\n                            pages.map((elem, index) => {\n                                return <div key={elem} className={currentPage === elem ? css.active : undefined} onClick={() => pageChange(elem)}>{elem}</div>\n                            })\n                        }\n                    </div> */}\n\n"],"names":["getUsersSelector","createSelector","state","usersPage","users","getTotalUsersCount","totalUsersCount","getUsersToShow","usersToShow","getCurrentPage","currentPage","getIsLoading","isLoading","getFollowingInProcessUsers","followingInProcessUsers","getFilter","filter","User","_ref","unFollow","follow","ava","name","_ref$status","status","followed","id","_jsxs","className","css","children","_jsx","NavLink","to","concat","src","alt","disabled","some","userID","onClick","Users","memo","useAppSelector","IsLoading","dispatch","useDispatch","navigate","useNavigate","url","useLocation","searchParams","URLSearchParams","search","actualQueryPage","get","actualQueryTerm","term","actualQueryFollowed","friend","useEffect","getUsers","query","page","filteredQuery","Object","fromEntries","entries","_ref2","_ref3","_slicedToArray","undefined","queryString","toString","onFilterChanged","pagesCount","Math","ceil","_useForm","useForm","defaultValues","register","handleSubmit","reset","followUser","unFollowUser","Preloader","onSubmit","_objectSpread","type","placeholder","value","title","Pagination","count","defaultPage","boundaryCount","onChange","e","length","map","elem","photos","small","WithAuthRedirect"],"sourceRoot":""}